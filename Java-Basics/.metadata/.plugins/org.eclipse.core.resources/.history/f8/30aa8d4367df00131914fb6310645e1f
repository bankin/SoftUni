package ZiostSpaceInvaders;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Random;
import java.util.Timer;

import javax.swing.JFrame;
import javax.swing.JPanel;


public class Board extends JPanel implements Runnable {
	/**
	 * 
	 */
	private Image dbImage;
	private Graphics dbg;
	private static final long serialVersionUID = 1L;
	public static ArrayList<Aliens> aliensList = new ArrayList<>();
	private Aliens al;
	Random rand = new Random();
	
	public Board(){
		System.out.println("new game created");
		setBackground(Color.DARK_GRAY);
	}
	public void born(){
		System.out.println("Born");
		al = new Aliens(200,0);
		aliensList.add(al);
	}

	public void paints(Graphics g){
		System.out.println("PAINTTTSSSSS");
		
		dbImage = createImage(getWidth(), getHeight());
		dbg = dbImage.getGraphics();
		paint(dbg);
		g.drawImage(dbImage, 0, 0, this);
		exit(0);
		repaint();
	}
	public void draw(Graphics g){
		System.out.println("PAINTTT");
		for (int i = 0; i < aliensList.size(); i++) {
			Aliens a = aliensList.get(i);
			a.move();
			if(a.isVisible()){
				g.drawImage(a.getImage(),getX(),getY(),this);	
			}
			else {
				aliensList.remove(i);
			}
		}
	}
	
	@Override
	public void run() {
		System.out.println("STARTEDDDDDDDDDDD");
		try {
			while(true){		
				born();
				System.out.println(aliensList.size());
				for (int i = 0; i < aliensList.size(); i++) {
					Aliens a = aliensList.get(i);
					if(a.isVisible()){
						a.move();
					}
					else {
						aliensList.remove(i);
					}
				}
				Thread.sleep(2000);
			}
		} catch (Exception e) {
			System.err.println("Exception " + e.getMessage());
		}
	}
}