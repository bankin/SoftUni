import java.io.FileOutputStream;
import java.util.Date;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;


public class _09_Generate_PDF{
  private static String FILE = System.getProperty("user.home") + "/Desktop/GeneratePDF.pdf";
  private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
  private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.RED);
  private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD);
  private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);

  public static void main(String[] args) {
    try {
      Document document = new Document();
      PdfWriter.getInstance(document, new FileOutputStream(FILE));
      document.open();
      
      PdfPTable table;
      PdfPCell cell;

      // single element w/ border
      table = new PdfPTable(1);
      cell = new PdfPCell(new Phrase("BOLD WORDS", FontFactory.getFont(FontFactory.HELVETICA_BOLD, 11, Font.BOLD)));
      cell.setBorderWidth(2);
      cell.setPadding(5);
      cell.setPaddingTop(3);
      cell.setHorizontalAlignment(Element.ALIGN_CENTER);
      
      table.addCell(cell);
      table.SetWidthPercentage(new float[] { 598f }, PageSize.LETTER);
      table.HorizontalAlignment = Element.ALIGN_CENTER;
      document.Add(table);
      
      
      addMetaData(document);
      addTitlePage(document);
      addContent(document);
      document.close();
      System.out.println("Ok");
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

  // iText allows to add metadata to the PDF which can be viewed in your Adobe
  // Reader
  // under File -> Properties
  private static void addMetaData(Document document) {
    document.addTitle("Cards & Suits");
    document.addSubject("Task 09 Java Basics Homework");
    document.addKeywords("Java, PDF, iText");
    document.addAuthor("Nikolay Bankin");
    document.addCreator("Bankin");
  }

  private static void addTitlePage(Document document) throws DocumentException {
    Paragraph preface = new Paragraph();
    // We add one empty line
    addEmptyLine(preface, 1);
    // Lets write a big header
    preface.add(new Paragraph("Cards & Suits", catFont));
    addEmptyLine(preface, 1);
    // Will create: Report generated by: _name, _date
    preface.add(new Paragraph("Created at: " + new Date(), smallBold));
    // add a table
    document.newPage();
    
    createTable(preface);
       
    document.add(preface);
    
  }

  private static void addContent(Document document) throws DocumentException {
    Chapter catPart = new Chapter(1);

    // add a table
    //createTable(section);

    // now add all this to the document
    document.add(catPart);
  }

  private static void createTable(Paragraph paragraph) throws DocumentException {
	  PdfPTable table = new PdfPTable(3);

    // t.setBorderColor(BaseColor.GRAY);
    // t.setPadding(4);
    // t.setSpacing(4);
    // t.setBorderWidth(1);

    PdfPCell c1 = new PdfPCell(new Phrase("Table Header 1"));
    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
    table.addCell(c1);    

    paragraph.add(table);
    
  }

  private static void createList(Section subCatPart) {
    List list = new List(true, false, 10);
    list.add(new ListItem("First point"));
    list.add(new ListItem("Second point"));
    list.add(new ListItem("Third point"));
    subCatPart.add(list);
  }

  private static void addEmptyLine(Paragraph paragraph, int number) {
    for (int i = 0; i < number; i++) {
      paragraph.add(new Paragraph(" "));
    }
  }
} 